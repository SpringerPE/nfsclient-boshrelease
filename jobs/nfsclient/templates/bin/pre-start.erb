#!/usr/bin/env bash
#
set -e # exit immediately if a simple command exits with a non-zero status

# Load job properties
source /var/vcap/jobs/nfsclient/data/properties.sh

# Setup env vars and folders for the ctl script
source /var/vcap/jobs/nfsclient/packages/bosh-helpers-nfs/setup.sh "nfsclient"

# Load function lib (alway before setup, there are some global variables needed)
source /var/vcap/jobs/nfsclient/packages/bosh-helpers-nfs/lib.sh


function get_dpkg_package_version {
    local pkgname="$1"
    local minversion="$2"
    local finalversion="0"

    for version in $(apt-cache madison "${pkgname}" | awk -F'|' '{print $2}')
    do
        if dpkg --compare-versions "${version}" eq "${minversion}" 2>/dev/null
        then
            finalversion=${version}
            break
        elif dpkg --compare-versions "${version}" ge "${minversion}" 2>/dev/null
        then
            if dpkg --compare-versions "${version}" gt "${finalversion}" 2>/dev/null
            then
                finalversion=${version}
            fi
        fi
    done
    [ "${finalversion}" == "0" ] && return 1
    echo "${finalversion}"
    return 0
}


LSB_RELEASE=$(lsb_release -c | awk '{print $2}')
if [ "${LSB_RELEASE}" == "xenial" ] || [ "${LSB_RELEASE}" == "bionic" ]
then
<% if p("nfs_server.apt_get_update") == true || p("nfs_server.apt_get_update") =~ (/(true|t|yes|y|1)$/i) %>
    echo "Running apt-get update ..."
    apt-get update
<% end %>
    echo "Installing NFS packages ..."
<% p("nfs_server.apt_packages", []).each do |aptp| %>
    <% aptp.each do |package, version| %>
    <% if version == nil || version == '' || version == '*' %>
    apt-get install  --no-install-recommends -y  <%= package %>
    <% else %>
    if version=$(get_dpkg_package_version "<%= package %>" "<%= version %>")
    then
        apt-mark unhold '<%= package %>'
        apt-get install --no-install-recommends --allow-downgrades --yes  <%= package %>="${version}"
        apt-mark hold '<%= package %>'
    else
        echo "APT package <%= package %> version equal or bigger than '<%= version %>' not found in ${LSB_RELEASE}"
        exit 1
    fi
    <% end %>
    <% end %>
<% end %>
else
    echo "Bosh release nfsclient does not support ${LSB_RELEASE}"
    exit 1
fi
